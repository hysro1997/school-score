<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hysro.scores.mapper.ExamStudentScoresMapper">

    <resultMap type="ExamStudentScores" id="ExamStudentScoresResult">
        <result property="scoreId"    column="score_id"    />
        <result property="grade"    column="grade"    />
        <result property="classes"    column="classes"    />
        <result property="examNumber"    column="exam_number"    />
        <result property="chineseScore"    column="chinese_score"    />
        <result property="mathsScore"    column="maths_score"    />
        <result property="englishScore"    column="english_score"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="examId"    column="exam_id"    />
    </resultMap>

    <resultMap id="ExamStudentScoresExamsResult" type="ExamStudentScores" extends="ExamStudentScoresResult">
        <collection property="exams" notNullColumn="sub_exam_id" javaType="Exams" resultMap="ExamsResult" />
    </resultMap>

    <resultMap type="Exams" id="ExamsResult">
        <result property="examId"    column="sub_exam_id"    />
        <result property="examName"    column="sub_exam_name"    />
        <result property="createTime"    column="sub_create_time"    />
        <result property="createBy"    column="sub_create_by"    />
    </resultMap>


    <sql id="selectExamStudentScoresVo">
        select a.score_id, a.grade, a.classes, a.exam_number, a.chinese_score, a.maths_score, a.english_score, a.create_time, a.create_by, a.update_time, a.update_by, a.exam_id, b.exam_id as sub_exam_id, b.exam_name as sub_exam_name, b.create_time as sub_create_time, b.create_by as sub_create_by
 from exam_student_scores a
        left join exams b on b.exam_id = a.exam_id
    </sql>

    <select id="selectExamStudentScoresList" parameterType="ExamStudentScores" resultMap="ExamStudentScoresExamsResult">
        <include refid="selectExamStudentScoresVo"/>
        <where>
            <if test="grade != null  and grade != ''"> and grade = #{grade}</if>
            <if test="classes != null  and classes != ''"> and classes = #{classes}</if>
            <if test="examNumber != null  and examNumber != ''"> and exam_number = #{examNumber}</if>
            <if test="examId != null "> and a.exam_id = #{examId}</if>
            <if test="exams != null and exams.examName != null  and exams.examName != ''"> and exam_name like concat('%', #{exams.examName}, '%')</if>
        </where>
        order by a.score_id desc
    </select>

    <select id="selectDistinctGradeClassesByExamId" parameterType="Long" resultType="Map">
        SELECT DISTINCT grade, classes FROM `exam_student_scores`
        WHERE exam_id = #{examId}
    </select>

    <select id="selectExamStudentScoresByExamNumberAndExamId" parameterType="ExamStudentScores" resultMap="ExamStudentScoresExamsResult">
        <include refid="selectExamStudentScoresVo"/>
        where a.exam_number = #{examNumber}  and a.exam_id = #{examId}
    </select>

    <select id="selectExamStudentScoresByScoreId" parameterType="Long" resultMap="ExamStudentScoresResult">
        <include refid="selectExamStudentScoresVo"/>
        where score_id = #{scoreId}
    </select>

    <insert id="insertExamStudentScores" parameterType="ExamStudentScores" useGeneratedKeys="true" keyProperty="scoreId">
        insert into exam_student_scores
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="grade != null">grade,</if>
            <if test="classes != null">classes,</if>
            <if test="examNumber != null and examNumber != ''">exam_number,</if>
            <if test="chineseScore != null">chinese_score,</if>
            <if test="mathsScore != null">maths_score,</if>
            <if test="englishScore != null">english_score,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="examId != null">exam_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="grade != null">#{grade},</if>
            <if test="classes != null">#{classes},</if>
            <if test="examNumber != null and examNumber != ''">#{examNumber},</if>
            <if test="chineseScore != null">#{chineseScore},</if>
            <if test="mathsScore != null">#{mathsScore},</if>
            <if test="englishScore != null">#{englishScore},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="examId != null">#{examId},</if>
         </trim>
    </insert>

    <update id="updateExamStudentScores" parameterType="ExamStudentScores">
        update exam_student_scores
        <trim prefix="SET" suffixOverrides=",">
            <if test="grade != null">grade = #{grade},</if>
            <if test="classes != null">classes = #{classes},</if>
            <if test="examNumber != null and examNumber != ''">exam_number = #{examNumber},</if>
            <if test="chineseScore != null">chinese_score = #{chineseScore},</if>
            <if test="mathsScore != null">maths_score = #{mathsScore},</if>
            <if test="englishScore != null">english_score = #{englishScore},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="examId != null">exam_id = #{examId},</if>
        </trim>
        where score_id = #{scoreId}
    </update>

    <delete id="deleteExamStudentScoresByScoreId" parameterType="Long">
        delete from exam_student_scores where score_id = #{scoreId}
    </delete>

    <delete id="deleteExamStudentScoresByScoreIds" parameterType="String">
        delete from exam_student_scores where score_id in
        <foreach item="scoreId" collection="array" open="(" separator="," close=")">
            #{scoreId}
        </foreach>
    </delete>
</mapper>
