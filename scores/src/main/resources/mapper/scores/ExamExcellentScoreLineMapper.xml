<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hysro.scores.mapper.ExamExcellentScoreLineMapper">

    <resultMap type="ExamExcellentScoreLine" id="ExamExcellentScoreLineResult">
        <result property="excellentId"    column="excellent_id"    />
        <result property="subject"    column="subject"    />
        <result property="excellentScore"    column="excellent_score"    />
        <result property="grade"    column="grade"    />
        <result property="examId"    column="exam_id"    />
        <result property="fullScore"    column="full_score"    />
        <result property="goodScore"    column="good_score"    />
        <result property="qualifiedScore"    column="qualified_score"    />
        <result property="unqualifiedOneScore"    column="unqualified_one_score"    />
        <result property="unqualifiedTwoScore"    column="unqualified_two_score"    />
        <result property="unqualifiedThreeScore"    column="unqualified_three_score"    />
        <result property="unqualifiedFourScore"    column="unqualified_four_score"    />
    </resultMap>

    <sql id="selectExamExcellentScoreLineVo">
        select excellent_id, `subject`, excellent_score, grade, exam_id, full_score, good_score, qualified_score, unqualified_one_score, unqualified_two_score, unqualified_three_score, unqualified_four_score from exam_excellent_score_line
    </sql>

    <select id="selectExamExcellentScoreLineList" parameterType="ExamExcellentScoreLine" resultMap="ExamExcellentScoreLineResult">
        <include refid="selectExamExcellentScoreLineVo"/>
        <where>
            <if test="subject != null  and subject != ''"> and `subject` = #{subject}</if>
            <if test="grade != null  and grade != ''"> and grade = #{grade}</if>
            <if test="examId != null "> and exam_id = #{examId}</if>
            and confirm_flag = 1
        </where>
        order by grade desc
    </select>

    <select id="selectExamExcellentScoreLine" parameterType="ExamExcellentScoreLine" resultMap="ExamExcellentScoreLineResult">
        <include refid="selectExamExcellentScoreLineVo"/>
        <where>
            <if test="subject != null  and subject != ''"> and `subject` = #{subject}</if>
            <if test="grade != null  and grade != ''"> and grade = #{grade}</if>
            <if test="examId != null "> and exam_id = #{examId}</if>
            and confirm_flag = 1
        </where>
    </select>

    <select id="selectExamExcellentScoreLineByExcellentId" parameterType="Long" resultMap="ExamExcellentScoreLineResult">
        <include refid="selectExamExcellentScoreLineVo"/>
        where excellent_id = #{excellentId} and confirm_flag = 1
    </select>

    <insert id="insertExamExcellentScoreLine" parameterType="ExamExcellentScoreLine" keyProperty="excellentId">
        insert into exam_excellent_score_line
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="subject != null">subject,</if>
            <if test="excellentScore != null">excellent_score,</if>
            <if test="grade != null">grade,</if>
            <if test="examId != null">exam_id,</if>
            <if test="fullScore != null">full_score,</if>
            <if test="goodScore != null">good_score,</if>
            <if test="qualifiedScore != null">qualified_score,</if>
            <if test="unqualifiedOneScore != null">unqualified_one_score,</if>
            <if test="unqualifiedTwoScore != null">unqualified_two_score,</if>
            <if test="unqualifiedThreeScore != null">unqualified_three_score,</if>
            <if test="unqualifiedFourScore != null">unqualified_four_score,</if>
            <if test="confirmFlag != null">confirm_flag,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="subject != null">#{subject},</if>
            <if test="excellentScore != null">#{excellentScore},</if>
            <if test="grade != null">#{grade},</if>
            <if test="examId != null">#{examId},</if>
            <if test="fullScore != null">#{fullScore},</if>
            <if test="goodScore != null">#{goodScore},</if>
            <if test="qualifiedScore != null">#{qualifiedScore},</if>
            <if test="unqualifiedOneScore != null">#{unqualifiedOneScore},</if>
            <if test="unqualifiedTwoScore != null">#{unqualifiedTwoScore},</if>
            <if test="unqualifiedThreeScore != null">#{unqualifiedThreeScore},</if>
            <if test="unqualifiedFourScore != null">#{unqualifiedFourScore},</if>
            <if test="confirmFlag != null">#{confirmFlag},</if>
        </trim>
    </insert>

    <update id="updateExamExcellentScoreLine" parameterType="ExamExcellentScoreLine">
        update exam_excellent_score_line
        <trim prefix="SET" suffixOverrides=",">
            <if test="subject != null">`subject` = #{subject},</if>
            <if test="excellentScore != null">excellent_score = #{excellentScore},</if>
            <if test="grade != null">grade = #{grade},</if>
            <if test="examId != null">exam_id = #{examId},</if>
            <if test="fullScore != null">full_score = #{fullScore},</if>
            <if test="goodScore != null">good_score = #{goodScore},</if>
            <if test="qualifiedScore != null">qualified_score = #{qualifiedScore},</if>
            <if test="unqualifiedOneScore != null">unqualified_one_score = #{unqualifiedOneScore},</if>
            <if test="unqualifiedTwoScore != null">unqualified_two_score = #{unqualifiedTwoScore},</if>
            <if test="unqualifiedThreeScore != null">unqualified_three_score = #{unqualifiedThreeScore},</if>
            <if test="unqualifiedFourScore != null">unqualified_four_score = #{unqualifiedFourScore},</if>
            <if test="confirmFlag != null">confirm_flag = #{confirmFlag},</if>
        </trim>
        where excellent_id = #{excellentId}
    </update>

    <update id="updateExamExcellentScoreLineByExamId" parameterType="ExamExcellentScoreLine">
        update exam_excellent_score_line
        SET confirm_flag = 1
        where exam_id = #{examId}
    </update>

    <delete id="deleteExamExcellentScoreLineByExcellentId" parameterType="Long">
        delete from exam_excellent_score_line where excellent_id = #{excellentId}
    </delete>

    <delete id="deleteExamExcellentScoreLineByExcellentIds" parameterType="String">
        delete from exam_excellent_score_line where excellent_id in
        <foreach item="excellentId" collection="array" open="(" separator="," close=")">
            #{excellentId}
        </foreach>
    </delete>
</mapper>
